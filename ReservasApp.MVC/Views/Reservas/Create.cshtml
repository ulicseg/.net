@model ReservasApp.MVC.Models.Reserva

@{
    ViewData["Title"] = "Nueva Reserva";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"><i class="fas fa-plus-circle"></i> Nueva Reserva</h4>
                </div>
                <div class="card-body">
                    <!-- FORMULARIO FORZADO ACTUALIZACI√ìN 2025-01-26 -->
                    <form asp-controller="Reservas" asp-action="Create" method="post" id="createReservaForm">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label asp-for="Titulo" class="form-label">
                                    <i class="fas fa-heading"></i> T√≠tulo de la Reserva
                                </label>
                                <input asp-for="Titulo" class="form-control" placeholder="Ej: Consulta m√©dica general" />
                                <span asp-validation-for="Titulo" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label asp-for="TipoServicio" class="form-label">
                                    <i class="fas fa-stethoscope"></i> Tipo de Servicio
                                </label>
                                <select asp-for="TipoServicio" class="form-select">
                                    <option value="">-- Seleccione un tipo --</option>
                                    <option value="@((int)ReservasApp.MVC.Models.TipoServicio.ConsultaMedica)">Consulta M√©dica</option>
                                    <option value="@((int)ReservasApp.MVC.Models.TipoServicio.TerapiaFisica)">Terapia F√≠sica</option>
                                    <option value="@((int)ReservasApp.MVC.Models.TipoServicio.ConsultaNutricional)">Consulta Nutricional</option>
                                    <option value="@((int)ReservasApp.MVC.Models.TipoServicio.ExamenLaboratorio)">Examen de Laboratorio</option>
                                    <option value="@((int)ReservasApp.MVC.Models.TipoServicio.ConsultaPsicologica)">Consulta Psicol√≥gica</option>
                                    <option value="@((int)ReservasApp.MVC.Models.TipoServicio.CirugiaMenor)">Cirug√≠a Menor</option>
                                </select>
                                <span asp-validation-for="TipoServicio" class="text-danger"></span>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label asp-for="FechaReserva" class="form-label">
                                    <i class="fas fa-calendar"></i> Fecha y Hora
                                </label>
                                <input asp-for="FechaReserva" type="datetime-local" class="form-control" 
                                       min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                                <span asp-validation-for="FechaReserva" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label asp-for="Descripcion" class="form-label">
                                    <i class="fas fa-info-circle"></i> Descripci√≥n (Opcional)
                                </label>
                                <textarea asp-for="Descripcion" class="form-control" rows="4" 
                                          placeholder="Agregue cualquier informaci√≥n adicional sobre su reserva..."></textarea>
                                <span asp-validation-for="Descripcion" class="text-danger"></span>
                                <div class="form-text">M√°ximo 500 caracteres</div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                    <a asp-action="Index" class="btn btn-outline-secondary me-md-2">
                                        <i class="fas fa-arrow-left"></i> Cancelar
                                    </a>
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-save"></i> Crear Reserva
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript funcional real -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Configurar fecha m√≠nima
    const fechaInput = document.querySelector('input[type="datetime-local"]');
    if (fechaInput) {
        const now = new Date();
        now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
        fechaInput.min = now.toISOString().slice(0, 16);
    }

    // Contador de caracteres para descripci√≥n
    const descripcionTextarea = document.querySelector('textarea[name="Descripcion"]');
    if (descripcionTextarea) {
        const contador = document.createElement('small');
        contador.className = 'form-text text-muted mt-1';
        contador.textContent = '0 / 500 caracteres';
        descripcionTextarea.parentNode.appendChild(contador);

        descripcionTextarea.addEventListener('input', function() {
            const length = this.value.length;
            contador.textContent = `${length} / 500 caracteres`;
            contador.className = length > 500 ? 'form-text text-danger mt-1' : 'form-text text-muted mt-1';
        });
    }

    // Seleccionamos espec√≠ficamente el formulario de creaci√≥n por su id
    const form = document.getElementById('createReservaForm');
    console.log('üîß Form encontrado:', form);
    
    if (form) {
        console.log('‚úÖ Agregando event listener al formulario');
        
        // Event listener del submit
        form.addEventListener('submit', function(e) {
            console.log('üì§ ¬°EVENTO SUBMIT DETECTADO!');
            console.log('Event object:', e);
            
            const titulo = form.querySelector('input[name="Titulo"]').value.trim();
            const fecha = form.querySelector('input[name="FechaReserva"]').value;
            const tipo = form.querySelector('select[name="TipoServicio"]').value;
            
            console.log('Datos del formulario:', {titulo, fecha, tipo});
            
            if (!titulo || !fecha || !tipo) {
                console.log('‚ùå Validaci√≥n fall√≥ - faltan campos');
                alert('Por favor complete todos los campos obligatorios');
                e.preventDefault();
                return false;
            }
            
            console.log('‚úÖ Validaci√≥n exitosa - formulario se enviar√°');
            return true;
        });
        console.log('‚úÖ Event listener de submit agregado');
        
        // Event listener del bot√≥n
        const submitBtn = form.querySelector('button[type="submit"]');
        console.log('üîç Bot√≥n submit encontrado:', submitBtn);
        
        if (submitBtn) {
            submitBtn.addEventListener('click', function(e) {
                console.log('üñ±Ô∏è ¬°CLICK EN BOT√ìN DETECTADO!');
                console.log('Button clicked, event:', e);
            });
            console.log('‚úÖ Event listener de click agregado al bot√≥n');
        } else {
            console.log('‚ùå NO se encontr√≥ el bot√≥n submit');
        }
        
        // Test adicional: verificar que el formulario tenga action
        console.log('üìç Form action:', form.action);
        console.log('üìç Form method:', form.method);
        
    } else {
        console.log('‚ùå NO se encontr√≥ el formulario');
    }
});
</script>



@section Styles {
    <style>
        .card {
            border: none;
            border-radius: 15px;
        }
        .card-header {
            border-radius: 15px 15px 0 0 !important;
        }
        .form-control, .form-select {
            border-radius: 8px;
        }
        .btn {
            border-radius: 8px;
        }
        .form-label {
            font-weight: 600;
            color: #495057;
        }
    </style>
} 